name: Create release
on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
env:
  BUILD_TYPE: Release
jobs:
  Flatpak:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install dependencies
      run: sudo apt -y install make autoconf gcc cmake libvulkan-dev git libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev glslang-tools mesa-common-dev libfuse2 flatpak flatpak-builder
    - name: Add flathub
      run: flatpak remote-add --user --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
    - name: Install flatpak dependencies
      run: flatpak install --user --assumeyes flathub org.freedesktop.Platform//22.08 org.freedesktop.Sdk//22.08 org.freedesktop.Platform.GL.default/x86_64/22.08
    - name: Build
      run: flatpak-builder --user --force-clean flatpak io.github.lleny.vkhandybug.yml
    - name: Export
      run: flatpak-builder --export-only --repo=flatpak-export flatpak io.github.lleny.vkhandybug.yml
    - name: Bundle
      run: flatpak build-bundle flatpak-export io.github.lleny.vkhandybug.flatpak io.github.lleny.vkhandybug
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: io.github.lleny.vkhandybug.${{ github.ref_name }}.flatpak
        path: ${{github.workspace}}/io.github.lleny.vkhandybug.flatpak
  Windowsbinaries:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - name: Prepare Vulkan SDK
      uses: humbletim/setup-vulkan-sdk@v1.2.0
      with:
        vulkan-query-version: 1.3.246.1
        vulkan-components: Vulkan-Headers, Vulkan-Loader, Glslang, SPIRV-Tools
        vulkan-use-cache: true
    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
    - name: Cleanup
      run: Move-Item -Path ${{github.workspace}}/build/bin/Release/vkhandybug.exe -Destination ${{github.workspace}}/build/bin/ ; rm ${{github.workspace}}/build/bin/Release -r -force
      shell: pwsh
    - name: Create binary artefact
      uses: actions/upload-artifact@v3
      with:
        name: windows-binaries-${{ github.ref_name }}
        path: ${{github.workspace}}/build/bin
